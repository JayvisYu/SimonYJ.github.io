<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[python学习笔记]]></title>
      <url>%2F2017%2F04%2F09%2Fpython%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
      <content type="text"><![CDATA[python程序元素 注释 缩进 输入 输出 变量 分支 常量 循环 表达式 温度转换程序 #TempConvert.py val = input(“请输入带温度表示符号的温度值（例如:32C）:”) if val[-1] in [‘C’,’c’]: f = 1.8 * float(val[0:-1]) print(“转换后的温度为:%.2fF”%f) elif val[-1] in [‘F’,’f’]: c = (float(val[0:-1]) -32) / 1.8 print(“转换后的温度为:%.2fC”%c) else : print(“输入有误”) 程序编写模板input-print模板用户输入 : input()获得输入;运算部分 : 根据算法实现;结果输出 : print()输出结果; initial-print模板初始变量 : 运算需要的初始值;运算部分 : 根据算法实现;结果输出 : print()输出结果; python蟒蛇绘制实例import turtledef drawSnake(rad,angle,len,neckrad) for i in range(len): turtle.circle(rad,angle) turtle.circle(-rad,angle) turtle.circle(rad, angle/2) turtle.fd(rad) turtle.circle(neckrad+1,180) turtle.fd(rad*2/3) def main(): turtle.setup(1300,800,0,0) pythonsize = 30 turtle.pensize(pythonsize) turtle.pencorcle(“blue”) turtle.seth(-40) drawSnake(40,80,5,pythonsize/2) main()解析 :1.程序运行main（）函数中的语句，turtle.setup()函数用于启动一个图形窗口，它有四个参数turtle.setup(width,height,startx,starty)分别是启动的窗口的宽度和高度以及起始坐标;2.显示屏幕也是一个坐标系，该坐标系以左上角为原点，向左和向下分别是x轴和y轴;3.turtle中的turtle.pensize()函数表示小乌龟运动轨迹的宽度;4.turtle中的turtle.pencolor()函数表示小乌龟运动轨迹的颜色;5.turtle中的turtle.seth(angle)函数表示小乌龟启动时运动的方向;6.main()函数给出了小乌龟爬行的窗口大小，爬行轨迹颜色和宽度以及初始爬行的方位;7.最后，调用drawSnake函数启动绘制蟒蛇功能;8.turtle.circle(）函数让小乌龟沿着一个圆形爬行，参数rad描述圆形轨迹半径的位置：这个半径在小乌龟运行在左侧rad远位置处，如果rad为负值则半径在小乌龟运行的右侧，参数angle表示小乌龟沿着圆形爬行的弧度值;9.turtle.fd()函数也可以用turtle.forward()表示乌龟向前直线爬行移动，参数为爬行距离;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Matlab笔记]]></title>
      <url>%2F2017%2F04%2F03%2FMatlab%E7%AC%94%E8%AE%B0%2F</url>
      <content type="text"><![CDATA[Matlab常用功能平台清理1.clear; %清理内存2.clc; %清屏3.close all; %关闭窗口4.format compact; %定义数据显示的样式;紧凑样式，每行显示更多内容 程序计时1.tic; %开始计时，toc结束计时 常用热键1.Tab键: 提示命令，自动填充;2.F5: 运行当前m文件;3.F9: 运行当前选中代码;4.Ctrl+Enter: 运行当前cell;5.Ctrl+R: 注释选中的代码段;6.Ctrl+T: 反注释选中的代码段; 查看函数的代码及帮助1.open mean; %打开函数，查看代码;2.help mean; %读取帮助;3.doc mean; %查看详细帮助; 查看Matlab 版本1.version; 出版功能1.Matlab支持出版为各种格式，如pdf,doc,ppt,tex,html等等,方便在各种格式转化，也可以点publish按钮，窗口化操作;2.publish(‘file_name’,’latex’) \%出版为latex,图片也会出版，默认publish（’file_name’,’html’）\%出版为html3.publish(‘file_name’,’doc’) \%出版为doc publish(‘file_name’,’pdf’)出版为pdf,中文支持的不好，可先latex,再生成pdf; 查看内存1.memory 其他功能1.与其他程序的相互调用; Matlab中的数据类型及其转化定义矩阵1.a = [1 2 3]%默认为行矩阵，直接输入法2.b = a’%转置，列矩阵3.c = rand(2,3) %随机生成2*3矩阵4.d = eye(4) %单位阵5.e = zero(3,2) %零阵6.f = ones(2,3) %全为1矩阵 数值型（整型、单精度、双精度等） 字符串型 元胞型 逻辑型 日期型 结构型 其他类型：Fints,Dataset,Table等等 例子1.A = [1,2,3,4,5,6] %定义一个数值型矩阵;2.B = [‘abcde’;’fffee’] %定义一个字符串矩阵;3.C = {‘123’,123;’abc’,’edf’} %定义元胞;4.D = num2str(A) %数值转字符串，注意空格占存储空间;5.E = num2cell(A) %数值转元胞;6.G = {‘123’,’’,’dfg’} %定义元胞数组;7.H = cell2mat(G) %元胞转字符串，空的位置会被忽略;8.I = {‘abc’,’1 3’;’edd’,’fdd’} %定义元胞数组9.J = cell2mat(I) %元胞转字符串，每行字符串长度必须一致;10.K = [‘what’;’edit’;’play’] %定义字符串数组，每行长度必须相同11.L = cellstr（I） %字符串转元胞 日期的格式1.双精度数字（从公元到今天的天数）2.字符串3.数值向量4.datestr(72000) %数值转字符串5.datenum([2014 10 18]) %数值向量转数字6.datevec(72000) %数字转数值向量 ## 日期做算术运算1.n1 = datenum(‘01/08/2015’,’dd/mm/yyyy’);2.n2 = n1 + 3;3.n3 = datestr(n2,’dd/mm/yyyy’); 日期格式转化d1 = datestr(n1,’yyyy/mm/dd’);d2 = datestr(n2,’mm/dd/yyyy’); d = datestr(datenum(‘07/08/2013’,’dd/mm/yyyy’),’dd-mmm-yyy’) 定义结构变量FIELD1 = ‘CODE’; %股票代码;VALUE1 = ‘000002’; FIELD2 = ‘NAME’; %股票名称;VALUE2 = ‘万科A’; FIELD3 = ‘DATE’; %交易日期;VALUE2 = {‘2015/9/1’;’2016/9/2’;’2017/9/3’}; FIELD4 = ‘CLOSE’; %收盘价格;VALUE4 = [23;25;22]; FIELD5 = ‘VOL’; %成交量;VALUE5 = [300;320;330]; 读取结构变量WKA.NAME %读属性;WKA.DATE %读属性值:字符串变量;WKA.VOL %读属性值:数值变量; 其他数据类型 Fints : 金融工具箱中定义的数据类型，本质为结构变量; Dateset : 统计工具箱中定义的数据，本质为结构变量; Table : 2014a以后版本中新增加的数据类型，类似Excel电子表格]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[愿你走出半生，归来还是少年]]></title>
      <url>%2F2017%2F03%2F30%2F%E9%9A%8F%E8%AE%B0%2F</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[小书匠语法手册]]></title>
      <url>%2F2017%2F03%2F29%2F%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%2F</url>
      <content type="text"><![CDATA[常用语法标题12345678910这是 H1 一级标题======这是 H2 二级标题------# 这是 H1 一级标题## 这是 H2 二级标题### 这是 H3 三级标题#### 这是 H4 四级标题##### 这是 H5 五级标题###### 这是 H6 六级标题 快捷键: [ctrl + h] 列表无序列表1234567891011121314151617181920* 项目1 * 子项目1.1 * 子项目1.2 * 子项目1.2.1* 项目2* 项目3+ 项目1 + 子项目1.1 + 子项目1.2 + 子项目1.2.1+ 项目2+ 项目3- 项目1 - 子项目1.1 - 子项目1.2 - 子项目1.2.1- 项目2- 项目3 快捷键: [ctrl + u] 有序列表12345678910111. 项目12. 项目23. 项目3 1. 项目3.1 2. 项目3.21. 项目11. 项目21. 项目3 1. 项目3.1 1. 项目3.2 有序列表起始编号1258. 项目52. 项目6 快捷键: [ctrl + o] 链接123[链接名称](链接地址)[链接名称][1][1] : 链接地址 图片123![名称](链接地址)![名称][1][1] : 链接地址 文字格式1234567**这是文字粗体格式**__这是文字粗体格式__*这是文字斜体格式*_这是文字斜体格式_ 引用12&gt; 第一行引用文字&gt; 第二行引用文字 水平线1*** GFM扩展语法表格1234First Header | Second Header------------- | -------------Content Cell | Content CellContent Cell | Content Cell 增强型表格123456789|First Header | Second Header |||First Header | Second Header | Third Header||------------- | -------------|-------------|表身1Content Cell | Merge Content Cell||Content Cell | Content Cell| Content Cell|表身2Content Cell | Merge Content Cell||Content Cell | Content Cell| Content Cell|[表格标题] 代码行内代码1`var x = "hello world"`块代码1234```javascriptvar a = "hello world";var b = "good luck";``` 自动转换成超链接系统将自动根据内容，将地址转换成超链接格式1http://markdown.xiaoshujiang.com HTML1&lt;div class="hey"&gt;Hello world&lt;/div&gt; 支持的html标签 删除线1~~在文字上添加删除线~~ 扩展语法目录1[toc] 扩展的文字格式1234567++插入的文字++==被记号的文字==上角文字: 19^th^下角文字: H~2~O 印刷字替换系统将自动替换下列文字，转换成排版系统使用的符号1(c) (C) (r) (R) (tm) (TM) (p) (P) +- 缩写定义1234The HTML specificationis maintained by the W3C.*[HTML]: Hyper Text Markup Language*[W3C]: World Wide Web Consortium 待办事项1234-[ ] 未完成事项-[ ] 未完成事项-[x] 完成事项-[X] 完成事项 脚注12脚注[^1x][^1x]: 脚注的用法 定义12345苹果: 一种水果: 一种品牌，计算机，手持设备桔子: 一种水果 公式行内公式1这是行内公式`!$ \Gamma(z) = \int_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\,. $` 块公式123```mathjax!$$\Gamma(z) = \int_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\,.$$``` 流程图 (语法)12345678910```flowst=&gt;start: 开始e=&gt;end: 结束op=&gt;operation: 操作步骤cond=&gt;condition: 是 或者 否?st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op``` 序列图 (语法)12345```sequence小明-&gt;小李: 你好 小李, 最近怎么样?Note right of 小李: 小李想了想小李--&gt;小明: 还是老样子``` 小书匠编辑器扩展语法块代码内文字格式块代码高亮标记123```javascriptvar &gt;&gt;==hello==&lt;&lt; = 'hello world'``` 块代码删除线123```javascriptvar &gt;&gt;~~hello~~&lt;&lt; = 'hello world'``` 块代码加粗123```javascriptvar &gt;&gt;**hello**&lt;&lt; = 'hello world'``` 块代码下横线123```javascriptvar &gt;&gt;++hello++&lt;&lt; = 'hello world'``` 小书匠编辑器提供了附件管理功能，用户可通过./对附件的引用，比如图片./jiangzhu.jpg。附件的上传需通过工具栏的插入图片ctrl+g，插入视频ctrl+shift+v，插入音频ctrl+shift+a，插入附件ctrl+shift+t功能键进行操作。 视频123%[名称](链接地址)%[名称][1][1] : 链接地址 音频123~[名称](链接地址)~[名称][1][1] : 链接地址 附件123=[名称](链接地址)=[名称][1][1] : 链接地址 元数据元数据必须放置在每篇文章的开头才能生效。如果文章里有元数据时，系统将自动以元数据的标题为准，用户通过文章信息的维护界面修改的标题及tags将会被覆盖掉。1234---title: 小书匠语法使用手册tags: 小书匠,语法,MARKDOWN,帮助--- mermaid流程图，序列图，甘特图（mermaid语法）1234567```mermaid!graph TD;A--&gt;B;A--&gt;C;B--&gt;D;C--&gt;D;``` 统计图 （统计图语法）数据格式为：{&quot;data&quot;: [], &quot;options&quot;:{}}系统使用jquery.parseJSON()函数进行解析，因此代码必须符合该函数的要求才能正常解析。123456```plot!&#123;"data": [ [[0, 0], [1, 1]] ],"options": &#123; "yaxis": &#123; "max": 1 &#125; &#125;&#125;``` 自定义class1## 自定义class &#123;class名称&#125; 通过自定义的class名称后，你就可以在每篇文章的自定义css里添加自己想要的样式了． cjk强调1_这里将显示带有衬线字体效果的中文做为强调_ cjk注音标示123&#123;需要被注音标示的内容&#125;(注音标示)&#123;需要被注音标示的内容&#125;[编号][编号]: 注音标示 居中显示文字1-&gt;居中显示的文字&lt;- 对齐显示文字1234:&gt;居左显示的文字&lt;--&gt;居右显示的文字&lt;::&gt;两端对齐显示的文字&lt;:-&gt;居中显示的文字&lt;- 注： 该语法与center语法冲突，两种语法同时开启时，align语法将覆盖center语法。 示例[toc] http://www.github.com/suziwen/markdownxiaoshujianghttp://www.xiaoshujiang.com 这是 H1 一s级标题这是 H2 二级标题这是 H3 三级标题这是 H4 四级标题这是 H5 五级标题这是 H6 六级标题视频%电影 音频~音乐 附件=附件 待办事项-[ ] 未完成事项-[x] 完成事项-[X] 完成事项 缩写定义The HTML specificationis maintained by the W3C. [HTML]: Hyper Text Markup Language [W3C]: World Wide Web Consortium 印刷字替换(c) (C) (r) (R) (tm) (TM) (p) (P) +- html代码html代码 流程图 (语法)12345678st=&gt;start: 开始e=&gt;end: 结束op=&gt;operation: 操作步骤cond=&gt;condition: 是 或者 否?st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 序列图 (语法)123小明-&gt;小李: 你好 小李, 最近怎么样?Note right of 小李: 小李想了想小李--&gt;小明: 还是老样子 脚注^1x表格Tables First Header Second Header Content Cell Content Cell Content Cell Content Cell 定义苹果: 一种水果: 一种品牌，计算机，手持设备 桔子: 一种水果 文字格式这是文字粗体格式 这是文字粗体格式 这是文字斜体格式 这是文字斜体格式 在文字上添加删除线 ++插入的文字++ ==被记号的文字== 上角文字: 19^th^ 下角文字: H~2~O 无序列表 项目1 子项目1.1 子项目1.2 子项目1.2.1 项目2 项目3 有序列表 项目1 项目2 项目3 项目3.1 项目3.2 有序列表起始编号 项目5 项目6 图片链接 链接名称 引用 第一行引用文字第二行引用文字 水平线 代码行内代码var x = &quot;hello world&quot; 块代码123456789101112131415161718192021222324252627282930313233343536/** * @author John Smith &lt;john.smith@example.com&gt; * @version 1.0*/package l2f.gameserver.model;import &gt;&gt;++java.util.ArrayList++&lt;&lt;;&gt;&gt;~~public abstract class L2Character &#123;~~&lt;&lt;&gt;&gt;++public abstract class L2Character extends L2Object &#123;++&lt;&lt; public static final Short ABNORMAL_EFFECT_BLEEDING = 0x0_0_0_1; // not sure public void moveTo(int x, int y, int z) &#123; _ai = null; _log.warning("Should not be called"); if (1 &gt; 5) &#123; return; &#125; &#125; /** Task of AI notification */ @SuppressWarnings( &#123; "nls", "unqualified-field-access", "boxing" &#125;) &gt;&gt;==public class NotifyAITask implements Runnable &#123; private final CtrlEvent _evt; List&lt;String&gt; mList==&lt;&lt; = new ArrayList&lt;String&gt;() public void run() &#123; try &#123; getAI().notifyEvent(_evt, _evt.class, null); &#125; catch (Throwable t) &#123; t.printStackTrace(); &#125; &#125; &#125;&#125; 块代码内文字格式块代码高亮标记1var &gt;&gt;==hello==&lt;&lt; = 'hello world' 块代码删除线1var &gt;&gt;~~hello~~&lt;&lt; = 'hello world' 块代码加粗1var &gt;&gt;**hello**&lt;&lt; = 'hello world' 块代码下横线1var &gt;&gt;++hello++&lt;&lt; = 'hello world' 显示行号12var x = 1;var z = &apos;str&apos;; 高亮指定行123456var x = 1;var y = 2;var z = 3;var u = 4;var w = 5;var a = 6; 显示行号并从指定行数计数1var x = 1; 禁用显示行号1var x = 1; 公式行内公式这是行内公式!$ \Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt\,. $ 块公式1$$\Gamma(z) = \int_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt\,.$$ 带编号的公式!$\eqref{ref1}$ 123\begin&#123;equation&#125;\int_0^\infty \frac&#123;x^22&#125;&#123;e^x-1&#125;\,dx = \frac&#123;\pi^4&#125;&#123;15&#125;\label&#123;ref1&#125;\end&#123;equation&#125; !$\eqref{ref1}$ 统计图1234&#123;&quot;data&quot;: [ [[0, 0], [1, 1]] ],&quot;options&quot;: &#123; &quot;yaxis&quot;: &#123; &quot;max&quot;: 1 &#125; &#125;&#125; mermaid流程图，序列图，甘特图流程图12345graph TD; A--&gt;B; A--&gt;C; B--&gt;D; C--&gt;D; 序列图123456sequenceDiagramA-&gt;&gt; B: QueryB-&gt;&gt; C: Forward queryNote right of C: Thinking...C-&gt;&gt; B: ResponseB-&gt;&gt; A: Forward response 甘特图123456789101112131415gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d PPT语法使用12---- 作为一个水平页分割线，注意在----前后都需要空一行 使用12-- 作为一个垂直页分割线, 注意在--前后都需要空一行 通过如下形式1&lt;!-- .element: class=&quot;fragment&quot; data-fragment-index=&quot;1&quot; --&gt; 可以实现fragment显示效果 注： 在演示文档模式下，toc和脚注语法将失效. emoji表情语法 Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum: Shortcuts (emoticons): :-) :-( 8-) ;) 自定义class自定义class用例{green}你可以通过查看生成的html代码里，在h4里找到名为green的class名称． cjk强调这里将显示中文衬线字体做为强调样式cjk注音标示{小}(xiao){书}(shu){匠}(jiang) 居中显示-&gt;居中显示的{文字}(wenzi)&lt;- -&gt;&lt;- 文字对齐:&gt;居左显示的文字&lt;- -&gt;居右显示的文字&lt;: :&gt;两端对齐显示的文字&lt;: -&gt;居中显示的文字&lt;- 增强型表格|First Header | Second Header |||First Header | Second Header | Third Header||————- | ————-|————-|表身1Content Cell | Merge Content Cell||Content Cell | Content Cell| Content Cell| 表身2Content Cell | Merge Content Cell||Content Cell | Content Cell| Content Cell|[表格标题]]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[小书匠编辑器使用手册]]></title>
      <url>%2F2017%2F03%2F28%2F%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F</url>
      <content type="text"><![CDATA[概要小书匠编辑器是一款专为markdown写作而设计的编辑器。 主要功能 专为markdown写作设计的文档编辑器，让用户心无旁骛的进行创作。 多种编辑模式。单栏编辑，双栏编辑，三栏编辑，全屏写作，全屏阅读…想怎么切换，就怎么切换，就是这样随心所欲。 多种编辑器实现。codemirror编辑器（提供vim,emacs按键，行专注等），ace编辑器（提供vim，emacs按键绑定，显示行号），轻量编辑器，CJK竖排编辑器 多种主题选择。包括编辑器主题，预览区代码高亮主题，及预览区用户自定义css。 丰富的语法支持。不仅提供了常用的commanmarkdown语法，还提供了许多有用的扩展语法，比如==Latex公式==，==表格==, ==目录==， ==脚注==, ==视频==, ==音频==, ==附件==, ==checklist==, ==流程图==等。更多语法可查看&lt;小书匠语法使用手册&gt; 代码块文字格式语法。语法可查看&lt;小书匠语法使用手册&gt; 第三方同步。==浏览器存储==, ==本地文件系统存储==, ==dropbox==, ==evernote==, ==印象笔记==,==有道笔记==, ==为知笔记==, ==github==等多种存储方案，保证了用户数据的安全，也让用户在存储方案上有了更多的选择。 支持evernote，印象笔记。提供双向操作，可以将文章保存到evernote/印象笔记上，也可以从evernote/印象笔记上导入数据。同时提供标签，附件，图片，待办等相关处理。 强大的文件管理功能。文件信息，标签，附件，音频，视频，图片管理。 发布功能。 支持将文章发布到博客平台上。 邮件发送功能。 sourceMap对照功能。方便在源markdown文件和生成的html文件上进行比较，特别适合markdown初学者使用，了解每一个markdown解析产生的结果，也适用于文章后期的校对上。 ppt。 ppt跨屏演示 pdf预览 typewriter scrolling autocomplete 和 snippets 功能 离线版下载地址 http://soft.xiaoshujiang.com WEB版访问地址http://markdown.xiaoshujiang.com 元数据使用说明语法开关元数据项，可以到设置面板里的语法扩展标签页下查看对应的元数据标识．在元数据里true时，表示当前文档强制打开该语法，false时表示强制关闭该语法．如果没有对应的元数据，则使用全局设置里的语法开关. preview_previewType元数据，可用的值为normal和presentation．用于文章在打开时，控制是否需要系统切换对应的预览界面．如果文章里没有该项元数据，或者元数据值不正确，则系统默认使用normal预览界面．该元数据仅控制文章打开时初始化的界面，用户依然可以通过按钮在不同预览界面间切换． 浏览器存储系统对创建的文章，都会在浏览器存储上进行保存。包括像evernote/印象笔记/github/dropbox等导入的文章，也都会保存一份副本，并创建一个标识，表示跟哪些第三方存储关联。 标题，标签文章标题的处理规则：如果文章内存在元数据title，则系统自动使用元数据内的title做为标题。如果文章未使用到元数据功能，用户可以通过维护文章信息按钮，修改标题。标签tags的规则也跟标题一样。 附件文章使用./做为附件的引用标识。对于图片，音频，视频，附件等链接的处理，系统只处理以./开头的链接，并转换成附件真实的地址进行显示。用户可以通过工具栏的插入图片，插入音频，插入视频，插入附件等按钮上传附件。 evernote/印象笔记小书匠编辑器提供对evernote/印象笔记的支持，下面的使用说明默认用户已经完成了evernote/印象笔记的绑定操作，并将当前的工作平台切换到evernote/印象笔记下。 新建通过新建按钮后，创建的文章将自动关联到evernote/印象笔记上(注:这里仅仅是在文章上创建一个关联的标识，只有当用户保存后，才能在服务器上查看到新的笔记) 打开点击笔记，系统将自动把笔记导入，并将当前文章切换为导入的笔记内容。导入的文章自动与evernote/印象笔记上的笔记关联，下次再点击该笔记时，将直接从浏览器存储上打开。用户可以通过切换存储平台浏览器存储，来删除该缓存的文件。导入的笔记如果本地没有缓存，系统将对服务器上的笔记进行判断，如果笔记是通过小书匠编辑器进行保存，并且文章在保存后没有被操作过，则系统自动使用保存时附带的markdown附件做为文章内容，重新导入。如果笔记已经被修改，或者笔记不是通过小书匠编辑器进行保存的，系统将自动将文章转换成markdown格式。 保存对于新创建的文章，用户可以直接保存ctrl+s，系统将弹出一个选择笔记本的窗口，确认后，系统将保存当前文章到evernote/印象笔记上。（在弹出窗口上选择笔记本时，如果用户选择了笔记，系统将覆盖该笔记） 对于已经存在的文章，但还没有保存到evernote/印象笔记，用户可以通过另存为ctrl+shift+s将当前文章保存到evernote/印象笔记上。 不管是保存，还是另存为，保存成功后，系统都将自动对当前文章与evernote/印象笔记上的笔记进行关联。下次保存时ctrl+s系统将自动同步保存到evernote/印象笔记上。 删除系统不提供删除操作，用户需要自己到evernote/印象笔记端删除，如果本地缓存了笔记，可以通过浏览器存储删除缓存。 重命名直接修改元数据title，如果文章内未使用元数据功能，可通过浏览器存储里的修改文章信息进行修改 标签管理系统自动通过每篇文章的元数据tags提取为笔记的标签。 附件管理打开时，系统自动将笔记上的附件导入到文章对应的附件管理器上。保存时，系统将根据文章内对附件的引用，将附件保存到服务器上。这里的引用包括音频，视频，附件，图片。如果文章内使用到了流程图，序列图，公式，统计图等，系统将会把这些内容转换成图片进行保存。由于evernote/印象笔记在部分终端不提供视频，音频的支持，查看保存的文章时，对应的音频，视频将以附件的形式存储。 待办事项目前系统]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[我的文章]]></title>
      <url>%2F2017%2F03%2F27%2F%E6%88%91%E7%9A%84%E6%96%87%E7%AB%A0%2F</url>
      <content type="text"><![CDATA[这是一篇测试文章，欢迎关注作者博客[1]: https://www.jarvisyu.com/]]></content>
    </entry>

    
  
  
</search>
